{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/nazarverhun/Documents/MyPlanetDesign/client/src/Screens/Register.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport authSvg from \"../assests/auth.svg\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport { authenticate, isAuth } from \"../helpers/auth\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\n\nconst Register = () => {\n  _s();\n\n  const [formData, setFormData] = useState({\n    name: \"\",\n    email: \"\",\n    password1: \"\",\n    password2: \"\"\n  });\n  const {\n    email,\n    name,\n    password1,\n    password2\n  } = formData; //Handle change from inputs\n\n  const handleChange = text => e => {\n    setFormData({ ...formData,\n      [text]: e.target.value\n    });\n  }; //submit data to backend\n\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (name && email && password1) {\n      if (password1 === password2) {\n        axios.post(`${process.env.REACT_APP_API_URL}/register`, {\n          name,\n          email,\n          password: password1\n        }).then(res => {\n          setFormData({ ...formData,\n            name: '',\n            email: \"\",\n            password1: \"\",\n            password2: \"\"\n          });\n          toast.success(res.data.message);\n        }).catch(err => {\n          toast.error(err.response);\n        });\n      } else {\n        toast.error(\"Passwords don't matches\");\n      }\n    } else {\n      toast.error(\"Please fill all fields\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Register Page\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Register, \"6u7HesCgtTzZ4LchAZiJLhlAOPc=\");\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/nazarverhun/Documents/MyPlanetDesign/client/src/Screens/Register.jsx"],"names":["React","useState","ToastContainer","toast","authenticate","isAuth","axios","Redirect","Register","formData","setFormData","name","email","password1","password2","handleChange","text","e","target","value","handleSubmit","preventDefault","post","process","env","REACT_APP_API_URL","password","then","res","success","data","message","catch","err","error","response"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,SAASC,cAAT,EAAyBC,KAAzB,QAAsC,gBAAtC;AACA,SAASC,YAAT,EAAuBC,MAAvB,QAAqC,iBAArC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,kBAAzB;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC;AACvCU,IAAAA,IAAI,EAAE,EADiC;AAEvCC,IAAAA,KAAK,EAAE,EAFgC;AAGvCC,IAAAA,SAAS,EAAE,EAH4B;AAIvCC,IAAAA,SAAS,EAAE;AAJ4B,GAAD,CAAxC;AAOA,QAAM;AAAEF,IAAAA,KAAF;AAASD,IAAAA,IAAT;AAAeE,IAAAA,SAAf;AAA0BC,IAAAA;AAA1B,MAAwCL,QAA9C,CARqB,CASrB;;AACA,QAAMM,YAAY,GAAIC,IAAD,IAAWC,CAAD,IAAO;AACpCP,IAAAA,WAAW,CAAC,EAAE,GAAGD,QAAL;AAAe,OAACO,IAAD,GAAQC,CAAC,CAACC,MAAF,CAASC;AAAhC,KAAD,CAAX;AACD,GAFD,CAVqB,CAcrB;;;AACA,QAAMC,YAAY,GAAIH,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACI,cAAF;;AACA,QAAIV,IAAI,IAAIC,KAAR,IAAiBC,SAArB,EAAgC;AAC9B,UAAIA,SAAS,KAAKC,SAAlB,EAA6B;AACzBR,QAAAA,KAAK,CAACgB,IAAN,CAAY,GAAEC,OAAO,CAACC,GAAR,CAAYC,iBAAkB,WAA5C,EAAwD;AACpDd,UAAAA,IADoD;AAC9CC,UAAAA,KAD8C;AACvCc,UAAAA,QAAQ,EAAEb;AAD6B,SAAxD,EAEGc,IAFH,CAEQC,GAAG,IAAI;AACXlB,UAAAA,WAAW,CAAC,EACR,GAAGD,QADK;AAEVE,YAAAA,IAAI,EAAE,EAFI;AAGVC,YAAAA,KAAK,EAAE,EAHG;AAIVC,YAAAA,SAAS,EAAE,EAJD;AAKVC,YAAAA,SAAS,EAAE;AALD,WAAD,CAAX;AAQEX,UAAAA,KAAK,CAAC0B,OAAN,CAAcD,GAAG,CAACE,IAAJ,CAASC,OAAvB;AACL,SAZD,EAYGC,KAZH,CAYSC,GAAG,IAAG;AACX9B,UAAAA,KAAK,CAAC+B,KAAN,CAAYD,GAAG,CAACE,QAAhB;AACH,SAdD;AAeH,OAhBD,MAgBO;AACLhC,QAAAA,KAAK,CAAC+B,KAAN,CAAY,yBAAZ;AACD;AACF,KApBD,MAoBO;AACL/B,MAAAA,KAAK,CAAC+B,KAAN,CAAY,wBAAZ;AACD;AACF,GAzBD;;AA0BA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CA1CD;;GAAM1B,Q;;KAAAA,Q;AA4CN,eAAeA,QAAf","sourcesContent":["import React, { useState } from \"react\";\nimport authSvg from \"../assests/auth.svg\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport { authenticate, isAuth } from \"../helpers/auth\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\n\nconst Register = () => {\n  const [formData, setFormData] = useState({\n    name: \"\",\n    email: \"\",\n    password1: \"\",\n    password2: \"\",\n  });\n\n  const { email, name, password1, password2 } = formData;\n  //Handle change from inputs\n  const handleChange = (text) => (e) => {\n    setFormData({ ...formData, [text]: e.target.value });\n  };\n\n  //submit data to backend\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (name && email && password1) {\n      if (password1 === password2) {\n          axios.post(`${process.env.REACT_APP_API_URL}/register`, {\n              name, email, password: password1\n          }).then(res => {\n              setFormData({\n                  ...formData,\n                name: '',\n                email: \"\",\n                password1: \"\",\n                password2: \"\",\n                })\n\n                toast.success(res.data.message)\n          }).catch(err=> {\n              toast.error(err.response)\n          })\n      } else {\n        toast.error(\"Passwords don't matches\");\n      }\n    } else {\n      toast.error(\"Please fill all fields\");\n    }\n  };\n  return <div>Register Page</div>;\n};\n\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}