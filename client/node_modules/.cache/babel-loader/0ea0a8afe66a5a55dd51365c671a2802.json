{"ast":null,"code":"import cookie from 'js-cookie'; //Set in Cookie\n\nexport const setCookie = (key, value) => {\n  if (window !== 'undefined') {\n    cookie.set(key, value, {\n      // 1Day\n      expires: 1\n    });\n  }\n}; //Remove from cookie\n\nexport const removeCookie = key => {\n  if (window !== 'undefined') {\n    cookie.remove(key, {\n      expires: 1\n    });\n  }\n}; //Get from cookie like token\n\nexport const getCookie = key => {\n  if (window !== 'undefined') {\n    return cookie.get(key);\n  }\n}; //Set in localstorage\n\nexport const setLocalStorage = (key, value) => {\n  if (window !== 'undefined') {\n    localStorage.setItem(key, JSON.stringify(value));\n  }\n}; //Remove from localstorage\n\nexport const removeLocalStorage = key => {\n  if (window !== 'undefined') {\n    localStorage.removeItem(key);\n  }\n}; // Auth user after login\n\nexport const authenticate = (response, next) => {\n  setCookie('token', response.data.token);\n  setLocalStorage('user', response.data.user);\n  next();\n}; //Singnout\n\nexport const signout = next => {\n  removeCookie('token');\n  removeLocalStorage('user');\n}; //Get user info from localstorage\n\nexport const isAuth = () => {\n  if (window !== 'undefined') {\n    const cookieChecked = getCookie('token');\n\n    if (cookieChecked) {\n      if (localStorage.getItem('user')) {\n        return JSON.parse(localStorage.getItem('user'));\n      } else {\n        return false;\n      }\n    }\n  }\n}; // update user data in localstorage\n\nexport const updateUser = (response, next) => {\n  if (window !== 'undefined') {\n    let auth = JSON.parse(localStorage.getItem('user'));\n    auth = response.data;\n    localStorage.setItem('user', JSON.stringify(auth));\n  }\n\n  next();\n};","map":{"version":3,"sources":["/Users/nazarverhun/Documents/MyPlanetDesign/client/src/helpers/auth.js"],"names":["cookie","setCookie","key","value","window","set","expires","removeCookie","remove","getCookie","get","setLocalStorage","localStorage","setItem","JSON","stringify","removeLocalStorage","removeItem","authenticate","response","next","data","token","user","signout","isAuth","cookieChecked","getItem","parse","updateUser","auth"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,WAAnB,C,CAEA;;AACA,OAAO,MAAMC,SAAS,GAAG,CAACC,GAAD,EAAMC,KAAN,KAAgB;AACrC,MAAIC,MAAM,KAAK,WAAf,EAA4B;AACxBJ,IAAAA,MAAM,CAACK,GAAP,CAAWH,GAAX,EAAeC,KAAf,EAAsB;AAClB;AACAG,MAAAA,OAAO,EAAE;AAFS,KAAtB;AAIH;AACJ,CAPM,C,CASP;;AACA,OAAO,MAAMC,YAAY,GAAGL,GAAG,IAAI;AAC/B,MAAIE,MAAM,KAAK,WAAf,EAA4B;AACxBJ,IAAAA,MAAM,CAACQ,MAAP,CAAcN,GAAd,EAAmB;AACfI,MAAAA,OAAO,EAAE;AADM,KAAnB;AAGH;AACJ,CANM,C,CAQP;;AACA,OAAO,MAAMG,SAAS,GAAGP,GAAG,IAAI;AAC5B,MAAIE,MAAM,KAAK,WAAf,EAA4B;AACxB,WAAOJ,MAAM,CAACU,GAAP,CAAWR,GAAX,CAAP;AACH;AACJ,CAJM,C,CAMP;;AACA,OAAO,MAAMS,eAAe,GAAG,CAACT,GAAD,EAAMC,KAAN,KAAgB;AAC3C,MAAIC,MAAM,KAAK,WAAf,EAA4B;AACxBQ,IAAAA,YAAY,CAACC,OAAb,CAAqBX,GAArB,EAA0BY,IAAI,CAACC,SAAL,CAAeZ,KAAf,CAA1B;AACH;AACJ,CAJM,C,CAOP;;AAEA,OAAO,MAAMa,kBAAkB,GAAGd,GAAG,IAAI;AACrC,MAAIE,MAAM,KAAK,WAAf,EAA4B;AACxBQ,IAAAA,YAAY,CAACK,UAAb,CAAwBf,GAAxB;AACH;AACJ,CAJM,C,CAOP;;AACA,OAAO,MAAMgB,YAAY,GAAG,CAACC,QAAD,EAAWC,IAAX,KAAoB;AAC5CnB,EAAAA,SAAS,CAAC,OAAD,EAAUkB,QAAQ,CAACE,IAAT,CAAcC,KAAxB,CAAT;AACAX,EAAAA,eAAe,CAAC,MAAD,EAASQ,QAAQ,CAACE,IAAT,CAAcE,IAAvB,CAAf;AACAH,EAAAA,IAAI;AACP,CAJM,C,CAOP;;AACA,OAAO,MAAMI,OAAO,GAAGJ,IAAI,IAAI;AAC3Bb,EAAAA,YAAY,CAAC,OAAD,CAAZ;AACAS,EAAAA,kBAAkB,CAAC,MAAD,CAAlB;AACH,CAHM,C,CAKP;;AACA,OAAO,MAAMS,MAAM,GAAE,MAAM;AACvB,MAAIrB,MAAM,KAAK,WAAf,EAA4B;AACxB,UAAMsB,aAAa,GAAGjB,SAAS,CAAC,OAAD,CAA/B;;AACA,QAAIiB,aAAJ,EAAmB;AACf,UAAId,YAAY,CAACe,OAAb,CAAqB,MAArB,CAAJ,EAAkC;AAC9B,eAAOb,IAAI,CAACc,KAAL,CAAWhB,YAAY,CAACe,OAAb,CAAqB,MAArB,CAAX,CAAP;AACH,OAFD,MAEO;AACH,eAAO,KAAP;AACH;AACJ;AACJ;AACJ,CAXM,C,CAcP;;AAEA,OAAO,MAAME,UAAU,GAAG,CAACV,QAAD,EAAUC,IAAV,KAAmB;AACzC,MAAIhB,MAAM,KAAK,WAAf,EAA4B;AACxB,QAAI0B,IAAI,GAAGhB,IAAI,CAACc,KAAL,CAAWhB,YAAY,CAACe,OAAb,CAAqB,MAArB,CAAX,CAAX;AACAG,IAAAA,IAAI,GAAGX,QAAQ,CAACE,IAAhB;AACAT,IAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAee,IAAf,CAA7B;AACH;;AACDV,EAAAA,IAAI;AACP,CAPM","sourcesContent":["import cookie from 'js-cookie'\n\n//Set in Cookie\nexport const setCookie = (key, value) => {\n    if (window !== 'undefined') {\n        cookie.set(key,value, {\n            // 1Day\n            expires: 1\n        })\n    }\n}\n\n//Remove from cookie\nexport const removeCookie = key => {\n    if (window !== 'undefined') {\n        cookie.remove(key, {\n            expires: 1\n        })        \n    }\n}\n\n//Get from cookie like token\nexport const getCookie = key => {\n    if (window !== 'undefined') {\n        return cookie.get(key)\n    }\n}\n\n//Set in localstorage\nexport const setLocalStorage = (key, value) => {\n    if (window !== 'undefined') {\n        localStorage.setItem(key, JSON.stringify(value))\n    }\n}\n\n\n//Remove from localstorage\n\nexport const removeLocalStorage = key => {\n    if (window !== 'undefined') {\n        localStorage.removeItem(key)\n    }\n}\n\n\n// Auth user after login\nexport const authenticate = (response, next) => {\n    setCookie('token', response.data.token)\n    setLocalStorage('user', response.data.user)\n    next()\n}\n\n\n//Singnout\nexport const signout = next => {\n    removeCookie('token')\n    removeLocalStorage('user')\n}\n\n//Get user info from localstorage\nexport const isAuth =() => {\n    if (window !== 'undefined') {\n        const cookieChecked = getCookie('token')\n        if (cookieChecked) {\n            if (localStorage.getItem('user')) {\n                return JSON.parse(localStorage.getItem('user'))\n            } else {\n                return false\n            }\n        }\n    }\n}\n\n\n// update user data in localstorage\n\nexport const updateUser = (response,next) => {\n    if (window !== 'undefined') {\n        let auth = JSON.parse(localStorage.getItem('user'))\n        auth = response.data\n        localStorage.setItem('user', JSON.stringify(auth))\n    }\n    next()\n}"]},"metadata":{},"sourceType":"module"}